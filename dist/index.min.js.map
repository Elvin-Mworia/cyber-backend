{"version":3,"sources":["index.js"],"names":["express","require","config","cors","Sequelize","app","Auth","Vulns","products","addproduct","bcrypt","Malware","Products","uploadPost","comments","accessToken","logger","req","next","Post","log","Allowed_origin","corOption","upload","json","use","urlencoded","extended","mpesa","console","user","productsB","origin","process","env","PORT","db","sequelize","sync","logging","force","then","listen","port","concat","err"],"mappings":"aAAA,IAAMA,QAAQC,QAAQ,WACtBA,QAAQ,UAAUC,SADlB,IAAMF,IAAAA,UAGAG,KAAKF,QAAQ,QAFnBA,GAAQA,QAAR,YAIMG,UAAUH,QAAQ,aAHlBI,WAAWJ,QAAjB,iBAKMK,KAAKL,QAAQ,iBAJbE,QAAKF,QAAQ,oBAMbM,MAAMN,QAAQ,kBALZO,SAACP,QAAQ,sBAOXQ,WAAWR,QAAQ,qBANnBG,UAAUH,QAAQ,oCAEbA,QAAQ,YAAbK,cAAAA,KAUAI,OAAOT,QAAQ,oBATPA,QAAQ,YAAhBU,gBAAAA,gBAWWV,QAAQ,YAAlBW,mBAAAA,SAVDL,OAAMN,QAAQ,YAYdY,WAAWZ,QAAQ,gBAXnBO,KAAAA,QAASP,kBAaTa,SAASb,QAAQ,qBAZjBQ,MAAAA,QAAWR,mCAcGA,QAAQ,4BAArBc,sBAAAA,YAGDC,OAAO,SAACC,EAZDhB,EAAOiB,GAAbC,QAaKC,IAAI,oBACZF,KAEGG,eAAe,CAAC,KAInBC,UAAU,CAjBPV,OAAAA,gBACPP,IAAMkB,IAAAA,KAAOtB,YACbI,IAAMQ,IAAAA,QAAUW,QAqBhBnB,IAAIoB,IAAIzB,QAAQ0B,WAAW,CAACC,UAAS,KAErCtB,IAAIoB,IAAIT,QAERX,IAAIoB,IAAI,kBAAkBzB,QAAO,OAAQ,mBAtBzCK,IAAMuB,IAAAA,eAAc5B,QAAA,OAAA,gBAyBpBK,IAAIoB,IAAI,SAxBYxB,YAyBpBI,IAzBOU,IAAAA,QAyBST,MAChBD,IAAIoB,IAAI,WAAWd,SAvBnBN,IAAMW,IAAAA,SAAOT,OACTsB,IAAAA,IAAAA,aAAYrB,UACZU,IAAAA,IAAI,QAAAY,MACNzB,IAHFoB,IAAA,cAAAF,OAAAd,YA4BAJ,IAAIoB,IAAI,YAAYX,UAxBnBT,IAAMgB,IAAAA,iBAAeU,WAItB1B,IAAIiB,IAAAA,gBAAUM,OACVI,IAAAA,IAAM,SAACX,aAKiBM,IAAAA,KAAQM,QAACC,IAAAC,KAAVC,GAA3BC,UAAAC,KAAA,CAAAC,QAAAV,QAAAT,IAAAoB,OAAA,IAAAC,KAAA,WAyBIZ,QAAQT,IAAI,0CApBZK,IAAIiB,OAAAC,KAAA,WAuBAd,QAAQT,IAAR,mBAAAwB,OAA+BD,WA5BZ,MASnB,SAAAE,GAAA,OAAAhB,QAAWlB,IAAX,wBAAAiC,OAARC","file":"index.min.js","sourcesContent":["const express=require('express');\nrequire(\"dotenv\").config();\nconst app=express();\nconst cors=require('cors');\nconst db=require(\"./models\");\nconst Sequelize=require(\"sequelize\");\nconst postrouter=require(\"./routes/post\");\nconst Auth=require(\"./routes/auth\");\nconst Malware=require(\"./routes/malware\");\nconst Vulns=require(\"./routes/vulns\");\nconst products=require(\"./routes/resources\");\nconst addproduct=require(\"./routes/products\");\nconst productsB=require(\"./routes/productsBought\");\n\n\n\nconst {Post}=require(\"./models\");\nconst bcrypt=require(\"bcrypt\");\nconst {Users}=require(\"./models\");\nconst {Products}=require(\"./models\");\nconst upload=require(\"./upload\");\nconst uploadPost=require(\"./uploadPost\");\nconst user=require(\"./routes/users\");\nconst comments=require(\"./routes/Comments\");\nconst mpesa=require(\"./routes/mpesasktpush\");\nconst {accessToken}=require('.//routes/Authmiddleware');\n\n\nconst logger=(req,res,next)=>{\n    console.log(\"incoming request\");\n    next();\n }\n const Allowed_origin=['*'];\n \n\n\nvar corOption={\n    origin:Allowed_origin\n}\napp.use(cors(corOption));\n\napp.use(express.json());\napp.use(express.urlencoded({extended:true}));\n  \napp.use(logger);\n//static files\napp.use(\"/images/product\",express.static(\"images/product\"));\napp.use(\"/images/post\",express.static(\"images/post\"));\n//routers\napp.use(\"/posts\",postrouter);\napp.use(\"/auth\",Auth);\napp.use(\"/malware\",Malware);\napp.use(\"/vulns\",Vulns);\napp.use(\"/resources\",products);\napp.use(\"/user\",user);\napp.use('/addproduct',upload,addproduct);\napp.use(\"/comments\",comments);\napp.use(\"/productBought\",productsB);\napp.use(\"/mpesa-online\",mpesa);\napp.use(\"/mpesa\",accessToken);\n\n\n \n\nconst port=process.env.PORT;\ndb.sequelize.sync({logging:console.log,force:false}).then(()=>{\n    \n    console.log(\"Connection to the database established\");\n    \n    app.listen(port,()=>{\n        console.log(`running on port ${port}`);\n});\n\n}).catch(err=>(console.log(`Something went wrong ${err}`)));\n"]}